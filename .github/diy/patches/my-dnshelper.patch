--- a/luci-app-my-dnshelper/htdocs/luci-static/resources/view/my-dnshelper/ip.js
+++ b/luci-app-my-dnshelper/htdocs/luci-static/resources/view/my-dnshelper/ip.js
@@ -28,7 +28,7 @@ return L.view.extend({
 
 	handleSave: function(ev) {
 		var map = document.querySelector('#ips_list');
-		return fs.write('/etc/my-dnshelper/bootstrap.mdhp', map.value.trim().replace(/\r\n/g, '\n') + '\n');
+		return fs.write('/etc/my-dnshelper/ip.mdhp', map.value.trim().replace(/\r\n/g, '\n') + '\n');
 	},
 
 	addFooter: function() {

--- a/luci-app-my-dnshelper/htdocs/luci-static/resources/view/my-dnshelper/filters.js
+++ b/luci-app-my-dnshelper/htdocs/luci-static/resources/view/my-dnshelper/filters.js
@@ -38,12 +38,12 @@ return view.extend({
 		s.anonymous = true;
 
 		o = s.option(form.DynamicList, "url", _("Filter Rules Subscription URL"));
-		o.value("https://cdn.jsdelivr.net/gh/privacy-protection-tools/anti-AD@master/adblock-for-dnsmasq.conf", _("anti-AD (Privacy-Protect|Preferred)"));
-		o.value("https://gcore.jsdelivr.net/gh/AdguardTeam/AdGuardSDNSFilter@gh-pages/Filters/filter.txt", _("AdGuard Filter"));
-		o.value("https://gcore.jsdelivr.net/gh/Cats-Team/AdRules/hosts.txt", _("Cats-Team Hosts"));
-		o.value("https://cdn.jsdelivr.net/gh/VeleSila/yhosts/hosts.txt", _("yhosts"));
-		o.value("https://cdn.jsdelivr.net/gh/kongfl888/ad-rules/malhosts.txt", _("Anti-Mal Hosts"));
-		o.value("https://cdn.jsdelivr.net/gh/kongfl888/ad-rules/antihosts-gambling-porn.txt", _("Anti-Gambling-Porn"));
+		o.value("https://fastly.jsdelivr.net/gh/privacy-protection-tools/anti-AD@master/adblock-for-dnsmasq.conf", _("anti-AD (Privacy-Protect|Preferred)"));
+		o.value("https://fastly.jsdelivr.net/gh/AdguardTeam/AdGuardSDNSFilter@gh-pages/Filters/filter.txt", _("AdGuard Filter"));
+		o.value("https://fastly.jsdelivr.net/gh/Cats-Team/AdRules/hosts.txt", _("Cats-Team Hosts"));
+		o.value("https://fastly.jsdelivr.net/gh/VeleSila/yhosts/hosts.txt", _("yhosts"));
+		o.value("https://fastly.jsdelivr.net/gh/kongfl888/ad-rules/malhosts.txt", _("Anti-Mal Hosts"));
+		o.value("https://fastly.jsdelivr.net/gh/kongfl888/ad-rules/antihosts-gambling-porn.txt", _("Anti-Gambling-Porn"));
 		o.value("https://easylist-downloads.adblockplus.org/easylistchina+easylist.txt", _("Easylistchina+Easylist"));
 
 		o = s.option(form.Button, "bfilter");

--- a/luci-app-my-dnshelper/htdocs/luci-static/resources/view/my-dnshelper/settings.js
+++ b/luci-app-my-dnshelper/htdocs/luci-static/resources/view/my-dnshelper/settings.js
@@ -162,11 +162,6 @@ return view.extend({
 		o.rmempty = false;
 		o.default = 'false';
 
-		o = s.option(form.Flag, "block_google", _("Block Google Website and API"));
-		o.description = _("Leave the network for a period of time");
-		o.rmempty = false;
-		o.default = 'false';
-
 		o = s.option(form.Flag, "my_github", _("Easy to Visit GitHub Website"));
 		o.rmempty = false;
 		o.default = 'false';

--- a/my-dnshelper/files/etc/config/my-dnshelper
+++ b/my-dnshelper/files/etc/config/my-dnshelper
@@ -11,7 +11,7 @@ config my-dnshelper
 	option dns_detect '0'
 	option app_test '1'
 	option dns_cache '600'
-	option dns_check '1'
+	option dns_check '0'
 	option filter_aaaa '0'
 	option use_mul '0'
 	option use_sec '0'
@@ -20,6 +20,7 @@ config my-dnshelper
 	option dns_log '0'
 	option rev_log '0'
 	option my_github '0'
-	option time_update '12'
+	option time_update '24'
+	list url 'https://fastly.jsdelivr.net/gh/privacy-protection-tools/anti-AD@master/adblock-for-dnsmasq.conf'
 
 

--- a/my-dnshelper/files/usr/share/my-dnshelper/comm
+++ b/my-dnshelper/files/usr/share/my-dnshelper/comm
@@ -55,7 +55,15 @@ sharedir="/usr/share/my-dnshelper"
 Logfile="/tmp/my-dnshelper.log"
 D="date +'%Y-%m-%d %H:%M:%S'"
 RPath="/tmp/my-dnshelper.d"
-DPath="/tmp/dnsmasq.d"
+DEFAULT_DNSMASQ_CFGID="$(uci -q show "dhcp.@dnsmasq[0]" | awk 'NR==1 {split($0, conf, /[.=]/); print conf[2]}')"
+if [ -f "/tmp/etc/dnsmasq.conf.$DEFAULT_DNSMASQ_CFGID" ]; then
+	DNSMASQ_CONF_DIR="$(awk -F '=' '/^conf-dir=/ {print $2}' "/tmp/etc/dnsmasq.conf.$DEFAULT_DNSMASQ_CFGID")"
+	if [ -n "$DNSMASQ_CONF_DIR" ]; then
+		DPath=${DNSMASQ_CONF_DIR%*/}
+	else
+		DPath="/tmp/dnsmasq.d"
+	fi
+fi
 EPath="/etc/my-dnshelper"
 LPath="/var/etc/dnsmasq-my-dnshelper.d"
 TPath="/tmp/dns_tmp"
@@ -158,55 +166,38 @@ clean_wfiles(){
 	[ -f $helperconf ] && rm -f $helperconf
 }
 
-extract_rules(){
-		echo "*$1"
-		iptables-save -t $1 | grep MY_DNSHELPER |
-			sed -e "s/^-A \(OUTPUT\|FORWARD\)/-I \1 1/"
-		echo 'COMMIT'
-}
-
-init_fwi(){
-	echo '#!/bin/sh' > $FWI
-}
-
-get_include(){
-	init_fwi
-
-	cat <<-EOF >> $FWI
-	iptables-save -c | grep -v MY_DNSHELPER | iptables-restore -c
-	iptables-restore -n <<-EOT
-	$(extract_rules filter)
-	EOT
-EOF
-}
-
 clear_iprule(){
-	sleep 1s
-	iptables -w 2 -D FORWARD -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP 2>/dev/null
-	iptables -w 2 -D OUTPUT -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP 2>/dev/null
-	which ipset >/dev/null && ipset destroy myipdrop 2>/dev/null
-	rm -f $bgsconf
-	init_fwi
+	if [ -n "$(command -v nft)" ]; then
+		fw4 reload
+		nft flush set inet fw4 myipdrop 2>/dev/null
+		nft delete set inet fw4 myipdrop 2>/dev/null
+	else
+		iptables -w 2 -D FORWARD -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP 2>/dev/null
+		iptables -w 2 -D OUTPUT -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP 2>/dev/null
+		which ipset >/dev/null && ipset destroy myipdrop 2>/dev/null
+	fi
 }
 
 add_iprule(){
-	local ipstok=1
 	local i=""
 	[ -d $SPath ] || mkdir -p $SPath
-	echo -n > $bgsconf
-	which ipset >/dev/null || ipstok=0
-	[ $ipstok -eq 1 ] && ipset create myipdrop hash:net 2>/dev/null
-	for j in $(cat $EPath/ip.mdhp);do
-		i=`echo $j| grep -oE "[0-9a-fA-F\:]*([0-9]+(\.[0-9]+){3})?"`
-		[ -n "$i" ] || continue
-		[ $ipstok -eq 1 ] && ipset -! add myipdrop $i;
-		if [ $(echo $i | grep -c "/") -eq 0 ]; then
-			echo "bogus-nxdomain=$i" >> $bgsconf
+	if [ -n "$(command -v nft)" ]; then
+		nft add set inet fw4 myipdrop { type ipv4_addr \; flags interval \; }
+		for i in $(cat $EPath/ip.mdhp | tr -s '\n' | grep -v "^#" | grep -E "(\.((2(5[0-5]|[0-4][0-9]))|[0-1]?[0-9]{1,2})){3}");do
+			[ -n "$i" ] && nft add element inet fw4 myipdrop { $i };
+		done
+		nft add rule inet fw4 output ip saddr @myipdrop drop
+		nft add rule inet fw4 forward ip saddr @myipdrop drop
+	else
+		if [ -n "$(command -v ipset)" ]; then
+			ipset create myipdrop hash:net 2>/dev/null
+			for i in $(cat $EPath/ip.mdhp | tr -s '\n' | grep -v "^#" | grep -E "(\.((2(5[0-5]|[0-4][0-9]))|[0-1]?[0-9]{1,2})){3}");do
+				[ -n "$i" ] && ipset -! add myipdrop $i;
+			done
+			iptables -w -I FORWARD -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP
+			iptables -w -I OUTPUT -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP
 		fi
-	done
-	iptables -w -I FORWARD -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP
-	iptables -w -I OUTPUT -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP
-	get_include
+	fi
 }
 
 ping_1p(){
