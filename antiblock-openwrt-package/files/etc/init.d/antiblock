#!/bin/sh /etc/rc.common

START=99
USE_PROCD=1

start_service() {
	echo "AntiBlock start"

	local log="$(uci -q get antiblock.@antiblock[0].log)"
	local stat="$(uci -q get antiblock.@antiblock[0].stat)"
	local url="$(uci -q get antiblock.@antiblock[0].url)"
	local file="$(uci -q get antiblock.@antiblock[0].file)"
	local output="$(uci -q get antiblock.@antiblock[0].output)"
	local DNS="$(uci -q get antiblock.@antiblock[0].DNS)"
	local listen="$(uci -q get antiblock.@antiblock[0].listen)"
	local VPN_name="$(uci -q get antiblock.@antiblock[0].VPN_name)"

	procd_open_instance

	procd_set_param command "/usr/bin/antiblock"
	procd_set_param stdout 1

	if [ -n "$log" ]; then
		procd_append_param command -log
	fi
	if [ -n "$stat" ]; then
		procd_append_param command -stat
	fi
	if [ -n "$url" ]; then
		procd_append_param command -url "$url"
	fi
	if [ -n "$file" ]; then
		procd_append_param command -file "$file"
	fi
	if [ -n "$output" ]; then
		mkdir -p "$output"
		procd_append_param command -output "$output"
	fi
	if [ -n "$DNS" ]; then
		procd_append_param command -DNS "$DNS"
	fi
	if [ -n "$listen" ]; then
		local forward="$(uci -q get antiblock.@dhcp_backup[0].forward)"

		if [ -z "$forward" ]; then
			local listen_IP="$(echo $listen | cut -d ':' -f1)"
			local listen_port="$(echo $listen | cut -d ':' -f2)"

			local dhcp_noresolv="$(uci -q get dhcp.@dnsmasq[0].noresolv)"
			local dhcp_server="$(uci -q get dhcp.@dnsmasq[0].server)"

			uci -q add antiblock dhcp_backup >/dev/null 2>&1

			if [ -n "$dhcp_noresolv" ]; then
				uci -q set antiblock.@dhcp_backup[0].noresolv="$dhcp_noresolv"
			fi
			if [ -n "$dhcp_server" ]; then
				uci -q set antiblock.@dhcp_backup[0].server="$dhcp_server"
			fi

			uci -q set dhcp.@dnsmasq[0].noresolv="1"
			uci -q delete dhcp.@dnsmasq[0].server
			uci -q add_list dhcp.@dnsmasq[0].server="$listen_IP#$listen_port"

			uci -q set antiblock.@dhcp_backup[0].forward="1"
		fi

		procd_append_param command -listen "$listen"
	fi
	if [ -n "$VPN_name" ]; then
		local gateway="$(uci -q get network.$VPN_name.addresses | cut -d '/' -f1)"
		procd_append_param command -gateway "$gateway"
	fi

	procd_close_instance

	uci -q commit antiblock.@dhcp_backup[0]
	uci -q commit dhcp.@dnsmasq[0]

	/etc/init.d/dnsmasq restart >/dev/null 2>&1
}

stop_service() {
	echo "AntiBlock stop"

	local forward="$(uci -q get antiblock.@dhcp_backup[0].forward)"

	if [ -n "$forward" ]; then
		uci -q delete dhcp.@dnsmasq[0].noresolv
		uci -q delete dhcp.@dnsmasq[0].server

		local dhcp_noresolv_backup="$(uci -q get antiblock.@dhcp_backup[0].noresolv)"
		local dhcp_server_backup="$(uci -q get antiblock.@dhcp_backup[0].server)"

		if [ -n "$dhcp_noresolv_backup" ]; then
			uci -q set dhcp.@dnsmasq[0].noresolv="$dhcp_noresolv_backup"
		fi
		if [ -n "$dhcp_server_backup" ]; then
			for i in $(echo $dhcp_server_backup | tr " " "\n"); do
				uci -q add_list dhcp.@dnsmasq[0].server="$i"
			done
		fi

		uci -q delete antiblock.@dhcp_backup[0]
	fi

	local VPN_name="$(uci -q get antiblock.@antiblock[0].VPN_name)"

	if [ -n "$VPN_name" ]; then
		local ips="$(ip r | grep "dev $VPN_name" | grep via | cut -d' ' -f 1)"
		for i in $ips; do
			ip r del $i >/dev/null 2>&1
		done
	fi

	uci -q commit antiblock.@dhcp_backup[0]
	uci -q commit dhcp.@dnsmasq[0]

	/etc/init.d/dnsmasq restart >/dev/null 2>&1
}

service_triggers() {
	procd_add_reload_trigger "antiblock"
}
